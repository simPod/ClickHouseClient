name: CI

on:
  pull_request:
  push:
    branches:
      - "master"
  schedule:
    - cron: "0 17 * * *"

jobs:
  coding-standard:
    runs-on: ubuntu-18.04
    name: Coding Standard

    steps:
      - uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@2.9.0
        with:
          php-version: 7.4
          coverage: none
          extensions: json
          tools: cs2pr

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install ${DEPENDENCIES}

      - name: Coding Standard
        run: vendor/bin/phpcs -q --report=checkstyle | cs2pr

  phpstan:
    runs-on: ubuntu-18.04
    name: PHPStan

    steps:
      - uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@2.9.0
        with:
          php-version: 7.4
          coverage: none
          extensions: json
          tools: cs2pr

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install ${DEPENDENCIES}

      - name: PHPStan
        run: vendor/bin/phpstan analyse --error-format=checkstyle | cs2pr

  coverage:
    runs-on: ubuntu-18.04
    name: Code Coverage
    env:
      CLICKHOUSE_VERSION: "20.9"

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Build the docker-compose stack
        run: docker-compose -f tests/docker-compose.yaml up -d

      - name: Install PHP
        uses: shivammathur/setup-php@2.9.0
        with:
          php-version: 7.4
          coverage: pcov
          ini-values: variables_order=EGPCS
          extensions: json

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install ${DEPENDENCIES}

      - name: Code coverage
        run: |
          export $ENV
          ./vendor/bin/phpunit --coverage-clover /tmp/coverage/clover.xml

      - name: Report to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_RUN_LOCALLY: 1
        run: vendor/bin/php-coveralls --coverage_clover /tmp/coverage/clover.xml --json_path /tmp/coverage/coveralls.json

  test_with-php-versions:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        php: [7.4]
        env: [
          'DEPENDENCIES=--prefer-lowest',
          '',
        ]
    name: PHP ${{ matrix.php }} Test ${{ matrix.env }}
    env:
      CLICKHOUSE_VERSION: "20.9"

    steps:
      - uses: actions/checkout@v2

      - name: Build the docker-compose stack
        run: docker-compose -f tests/docker-compose.yaml up -d

      - name: Install PHP
        uses: shivammathur/setup-php@2.9.0
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          ini-values: variables_order=EGPCS
          extensions: json, mbstring
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install ${DEPENDENCIES}

      - name: Run tests
        run: |
          export $ENV
          ./vendor/bin/phpunit
        env:
          ENV: ${{ matrix.env}}

  test-with-clickhouse-versions:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        clickhouse-version: ["19.17", "20.1", "20.3", "20.4", "20.5", "20.6", "20.7", "20.8", "20.9", "20.10", "20.11"]
    name: ClickHouse ${{ matrix.clickhouse-version }} Test
    env:
      CLICKHOUSE_VERSION: ${{ matrix.clickhouse-version }}

    steps:
      - uses: actions/checkout@v2

      - name: Build the docker-compose stack
        run: docker-compose -f tests/docker-compose.yaml up -d

      - name: Install PHP
        uses: shivammathur/setup-php@2.9.0
        with:
          php-version: 7.4
          coverage: none
          ini-values: variables_order=EGPCS
          extensions: json
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install ${DEPENDENCIES}

      - name: Run tests
        run: |
          export $ENV
          ./vendor/bin/phpunit
